//python
def httpRequest(apiName,method,reqData):
    reqData["AccessKeyId"] = gAccessKeyId
    if gDate != "":
        reqData["Date"] = gDate
    else:
        reqData["Date"] = datetime.utcnow().strftime("%a, %d %b %Y %H:%M:%S GMT")
    signature = generateSignature(apiName,reqData)
    reqData["Signature"] = signature
    data = urllib.urlencode(reqData)
    url = gBaseUrl+apiName
    if gDebug:
        print "url: "+url
        print "data: "+data
    if method=="post":
        req = urllib2.Request(url,data)
    elif method=="get":
        req = urllib2.Request(url+"?"+data)
    elif method=="delete":
        req = urllib2.Request(url,data)
        req.get_method = lambda: 'DELETE'
    else:
        raise ValueError
    response = urllib2.urlopen(req)#,timeout=15)
    res = response.read()
    if gDebug:
        print res
    return res
    
//php
function httpRequest($apiName,$method,$reqData)
{
    $method = strtolower($method);
    $reqData["AccessKeyId"] = $this->gAccessKeyId;
    $reqData["Date"] = gmstrftime("%a, %d %b %Y %H:%M:%S GMT")."\n";
    $reqData["Signature"] = $this->generateSignature($apiName,$reqData);
    $data =""; 
    $flag = true;
    foreach($reqData as $key=>$value)
    {
        $key = urlencode($key);
        $value = urlencode($value);
        if($flag) {$data = $data."$key=$value";$flag=false;}
        else {$data = $data."&$key=$value";}
    }
    $url = $this->gBaseUrl.$apiName;
    if($method=="get")
    {
        $req = curl_init();
        curl_setopt($req, CURLOPT_URL, $url."?".$data);
        curl_setopt($req, CURLOPT_RETURNTRANSFER, true);
        $res = curl_exec($req);
        curl_close($req);
        return $res;
    }
    else if($method=="post")
    {
        $req = curl_init();
        curl_setopt($req, CURLOPT_URL, $url);
        curl_setopt($req, CURLOPT_POST, true);
        curl_setopt($req, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($req, CURLOPT_POSTFIELDS, $data);
        $res = curl_exec($req);
        curl_close($req);
        return $res;
    }
    else if($method=="delete")
    {
        $req = curl_init();
        curl_setopt($req, CURLOPT_URL, $url);
        curl_setopt($req, CURLOPT_RETURNTRANSFER, true);
        curl_setopt($req, CURLOPT_POSTFIELDS, $data);
        curl_setopt($req, CURLOPT_CUSTOMREQUEST, "DELETE");
        $res = curl_exec($req);
        curl_close($req);
        return $res;
    }
    return false;
}

//c#
public static void HttpUploadFile(string url, string file, string paramName, string contentType, NameValueCollection nvc) {
        log.Debug(string.Format("Uploading {0} to {1}", file, url));
        string boundary = "---------------------------" + DateTime.Now.Ticks.ToString("x");
        byte[] boundarybytes = System.Text.Encoding.ASCII.GetBytes("\r\n--" + boundary + "\r\n");

        HttpWebRequest wr = (HttpWebRequest)WebRequest.Create(url);
        wr.ContentType = "multipart/form-data; boundary=" + boundary;
        wr.Method = "POST";
        wr.KeepAlive = true;
        wr.Credentials = System.Net.CredentialCache.DefaultCredentials;

        Stream rs = wr.GetRequestStream();

        string formdataTemplate = "Content-Disposition: form-data; name=\"{0}\"\r\n\r\n{1}";
        foreach (string key in nvc.Keys)
        {
            rs.Write(boundarybytes, 0, boundarybytes.Length);
            string formitem = string.Format(formdataTemplate, key, nvc[key]);
            byte[] formitembytes = System.Text.Encoding.UTF8.GetBytes(formitem);
            rs.Write(formitembytes, 0, formitembytes.Length);
        }
        rs.Write(boundarybytes, 0, boundarybytes.Length);

        string headerTemplate = "Content-Disposition: form-data; name=\"{0}\"; filename=\"{1}\"\r\nContent-Type: {2}\r\n\r\n";
        string header = string.Format(headerTemplate, paramName, file, contentType);
        byte[] headerbytes = System.Text.Encoding.UTF8.GetBytes(header);
        rs.Write(headerbytes, 0, headerbytes.Length);

        FileStream fileStream = new FileStream(file, FileMode.Open, FileAccess.Read);
        byte[] buffer = new byte[4096];
        int bytesRead = 0;
        while ((bytesRead = fileStream.Read(buffer, 0, buffer.Length)) != 0) {
            rs.Write(buffer, 0, bytesRead);
        }
        fileStream.Close();

        byte[] trailer = System.Text.Encoding.ASCII.GetBytes("\r\n--" + boundary + "--\r\n");
        rs.Write(trailer, 0, trailer.Length);
        rs.Close();

        WebResponse wresp = null;
        try {
            wresp = wr.GetResponse();
            Stream stream2 = wresp.GetResponseStream();
            StreamReader reader2 = new StreamReader(stream2);
            log.Debug(string.Format("File uploaded, server response is: {0}", reader2.ReadToEnd()));
        } catch(Exception ex) {
            log.Error("Error uploading file", ex);
            if(wresp != null) {
                wresp.Close();
                wresp = null;
            }
        } finally {
            wr = null;
        }
    }
